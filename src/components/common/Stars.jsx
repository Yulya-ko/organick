import React from 'react';
import StarRateRoundedIcon from '@mui/icons-material/StarRateRounded';

export default function Stars() {
  return (
    <div style={{ display: 'flex', gap: 2 }}>
      {[...Array(5)].map((_, i) => (
        <StarRateRoundedIcon key={i} sx={{ color: '#FFA858' }} 
          fontSize="medium"  />
      ))}
    </div>
  );
}

// Пояснення:
// По кроках:
// Array(5)
// Це конструктор масиву в JavaScript, який створює порожній масив довжиною 5.
// Але цей масив ще не має реальних значень — він просто "зарезервував" 5 місць.
// Наприклад:

// js
// Копировать
// Редактировать
// Array(5)  // -> [ <empty>, <empty>, <empty>, <empty>, <empty> ]
// [...Array(5)]
// Оператор spread (...) розкриває (копіює) елементи масиву у новий масив.
// Коли застосовуємо його до Array(5), ми отримуємо масив довжиною 5, але вже з реальними undefined значеннями.
// Тобто:

// js
// Копировать
// Редактировать
// [...Array(5)]  // -> [undefined, undefined, undefined, undefined, undefined]
// Це потрібно, бо без ... у початковому Array(5) у нас немає справжніх елементів, і метод map на ньому не працюватиме.

// .map((_, i) => (...))

// .map() — це метод масиву, який проходить по кожному елементу і повертає новий масив, трансформуючи кожен елемент.

// Аргументи колбеку:

// _ — це значення елемента масиву (в нашому випадку undefined, але ми його не використовуємо, тому і назвали _, як знак "ігнорувати").

// i — це індекс елемента (число від 0 до 4).

// Для кожного елемента ми повертаємо JSX <StarRateRoundedIcon ... />.

// key={i}

// React вимагає у списках, які рендеряться через .map(), унікальний атрибут key, щоб ефективно оновлювати DOM.

// Ми використовуємо індекс i як унікальний ключ.

// sx={{ color: '#FFA858' }}

// Тут ми задаємо стилі іконці за допомогою пропса sx від MUI, задаючи колір зірки.

// fontSize="medium"

// Вказуємо розмір іконки.

// Підсумок:
// Цей код:

// Створює масив з 5 елементів [undefined, undefined, undefined, undefined, undefined].

// Для кожного елемента малює іконку зірки, задаючи колір і розмір.

// В результаті — рендерить 5 іконок зірок з кольором #FFA858 у рядок.